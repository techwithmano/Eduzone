
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function getRole(userId) {
      let userData = getUserData(userId);
      if ('role' in userData) {
        return userData.role;
      }
      return null;
    }

    function isRequestingUserAdmin() {
      return isSignedIn() && getRole(request.auth.uid) == 'ADMIN';
    }
    
    function isClassroomAdmin(classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return isRequestingUserAdmin() || ('creatorId' in classroom && classroom.creatorId == request.auth.uid);
    }

    function isAssignedTeacher(classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return 'teacherIds' in classroom && classroom.teacherIds.hasAny([request.auth.uid]);
    }

    function isEnrolledStudent(classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return 'enrolledStudentIds' in classroom && classroom.enrolledStudentIds.hasAny([request.auth.uid]);
    }

    // --- Rules ---

    match /users/{userId} {
      allow read, update: if isSignedIn() && (request.auth.uid == userId || isRequestingUserAdmin());
      allow list: if isRequestingUserAdmin();
      allow create: if isSignedIn();
    }

    match /classrooms/{classroomId} {
      allow list: if isSignedIn();
      allow read: if isClassroomAdmin(classroomId) || isAssignedTeacher(classroomId) || isEnrolledStudent(classroomId);
      allow create, update, delete: if isRequestingUserAdmin();

      // --- Classroom Sub-collections ---
      
      // Rule for Announcements, Materials
      match /(announcements|materials|assignments|quizzes)/{docId} {
        allow read, list: if isClassroomAdmin(classroomId) || isAssignedTeacher(classroomId) || isEnrolledStudent(classroomId);
        allow write: if isClassroomAdmin(classroomId) || isAssignedTeacher(classroomId);
        
        // Submissions for Assignments or Quizzes
        match /submissions/{submissionId} {
          allow read: if isClassroomAdmin(classroomId) || isAssignedTeacher(classroomId);
          allow write: if isEnrolledStudent(classroomId) && request.auth.uid == submissionId;
        }
      }
    }
    
    match /products/{productId} {
      allow read, list: if true;
      allow write: if isRequestingUserAdmin();
    }
    
    match /contacts/{contactId} {
      allow create: if true;
      allow read, list, delete: if isRequestingUserAdmin();
    }
  }
}
