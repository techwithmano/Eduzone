
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Checks if the requesting user is the teacher or an enrolled student of a specific classroom.
    function isClassroomMember(classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return request.auth != null && (
        classroom.creatorId == request.auth.uid ||
        (classroom.enrolledStudentIds is list && request.auth.uid in classroom.enrolledStudentIds)
      );
    }
    
    // Checks if the requesting user is the teacher of a specific classroom.
    function isClassroomTeacher(classroomId) {
      return request.auth != null && get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId == request.auth.uid;
    }


    // --- Collection Rules ---

    // Users can read public profile info, but only write to their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Contact messages can only be created. No one can read/update them from the client.
    match /contacts/{contactId} {
      allow read, update, delete: if false;
      allow create: if true;
    }
    
    // Products are publicly readable, but not writable from the client.
    match /products/{productId} {
      allow read: if true;
      allow write: if false;
    }

    // Classrooms and their subcollections
    match /classrooms/{classroomId} {
      // Teachers can create, update, and delete their own classrooms.
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if isClassroomTeacher(classroomId);
      
      // Rule to get a SINGLE classroom document.
      allow get: if isClassroomMember(classroomId);

      // Rule to LIST classrooms (for dashboard queries).
      // This allows authenticated users to attempt queries. Security is enforced
      // by the client-side queries (e.g., where("creatorId", "==", uid)).
      allow list: if request.auth != null;
      
      // Announcements subcollection
      match /announcements/{announcementId} {
        allow read: if isClassroomMember(classroomId);
        allow write: if isClassroomTeacher(classroomId);
      }
      
      // Assignments subcollection
      match /assignments/{assignmentId} {
        allow read: if isClassroomMember(classroomId);
        allow write: if isClassroomTeacher(classroomId);
        
        // Submissions sub-subcollection
        match /submissions/{studentId} {
          // Student can read their own submission. Teacher can read any submission in their class.
          allow read: if request.auth != null && (request.auth.uid == studentId || isClassroomTeacher(classroomId));
          
          // A student can only write to their own submission document.
          allow write: if request.auth != null && request.auth.uid == studentId;
        }
      }
    }
  }
}
