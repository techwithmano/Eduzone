
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getUserData(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data;
    }

    function getRequestingUserRole() {
      if (!isAuth()) {
        return '';
      }
      let userData = getUserData(request.auth.uid);
      if ('role' in userData) {
        return userData.role;
      }
      return 'STUDENT';
    }
    
    function isAdmin() {
      return getRequestingUserRole() == 'ADMIN';
    }

    function isCreator(classroomDoc) {
      return isAuth() && 'creatorId' in classroomDoc && classroomDoc.creatorId == request.auth.uid;
    }
    
    function isAssignedTeacher(classroomDoc) {
      return isAuth() && 'teacherIds' in classroomDoc && request.auth.uid in classroomDoc.teacherIds;
    }
    
    function isEnrolled(classroomId) {
      let userDoc = getUserData(request.auth.uid);
      return 'enrolledClassroomIds' in userDoc && classroomId in userDoc.enrolledClassroomIds;
    }
    
    // --- Collection Rules ---

    match /users/{userId} {
      allow read: if isAuth();
      allow create: if isUser(userId);
      allow update: if isUser(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /classrooms/{classroomId} {
      allow read: if isAuth() && (isCreator(resource.data) || isAssignedTeacher(resource.data) || isEnrolled(classroomId));
      allow list: if isAuth();
      allow create: if isAdmin();
      allow update, delete: if isCreator(resource.data) && isAdmin();

      // Generic rule for classroom sub-collections (announcements, assignments, quizzes, materials).
      match /{subCollection}/{docId} {
        function getParentClassroomData() {
          return get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
        }

        allow read: if isAuth() && (isCreator(getParentClassroomData()) || isAssignedTeacher(getParentClassroomData()) || isEnrolled(classroomId));
        allow write: if isAuth() && (isCreator(getParentClassroomData()) || isAssignedTeacher(getParentClassroomData()));

        // Submissions for assignments and quizzes
        match /submissions/{submissionId} {
           allow read, delete: if isAuth() && (isCreator(getParentClassroomData()) || isAssignedTeacher(getParentClassroomData()));
           allow write: if isUser(submissionId) && isEnrolled(classroomId);
        }
      }
    }
    
    match /products/{productId} {
      allow read, list: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /contacts/{contactId} {
      allow write: if true;
      allow read: if isAdmin();
    }
  }
}
