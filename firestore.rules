
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isOwner(resourceId) {
      return request.auth.uid == resourceId;
    }
    function isSignedIn() {
      return request.auth != null;
    }
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    function isTeacher() {
      return isSignedIn() && getUserData().role == 'TEACHER';
    }

    // RULES
    match /products/{productId} {
      allow read: if true;
      allow write: if false; 
    }
    
    match /contacts/{contactId} {
      allow read: if false;
      allow create: if true;
    }

    match /users/{userId} {
      allow create: if isOwner(userId);
      // A user can read their own profile.
      // A teacher can list basic user info for enrolling students.
      allow get: if isOwner(userId);
      allow list: if isTeacher();
      // Allow updates only to specific, safe fields
      allow update: if isOwner(userId);
    }

    match /classrooms/{classroomId} {
      // READ: You can read a classroom if you are the creator (teacher) or enrolled in it (student).
      // This single rule works for both get and list queries, but requires queries to be specific.
      allow read: if (request.auth.uid == resource.data.creatorId) || 
                     (request.auth.uid in resource.data.enrolledStudentIds);
      
      // WRITE: Only the teacher who created the classroom can modify it.
      allow create, update, delete: if isTeacher() && request.auth.uid == resource.data.creatorId;

      match /announcements/{announcementId} {
        allow read: if (request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId) || 
                       (request.auth.uid in get(/databases/$(database)/documents/classrooms/$(classroomId)).data.enrolledStudentIds);
        allow create, delete: if request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId;
      }
      
      match /assignments/{assignmentId} {
         allow read: if (request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId) || 
                       (request.auth.uid in get(/databases/$(database)/documents/classrooms/$(classroomId)).data.enrolledStudentIds);
        allow create, delete: if request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId;
        
        match /submissions/{submissionId} {
          // The creator of the class (teacher) can read any submission.
          // The author of the submission (student) can read their own.
          allow read: if request.auth.uid == get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId ||
                         request.auth.uid == submissionId;
          // A student can only create/update their own submission.
          allow write: if request.auth.uid == submissionId;
        }
      }
    }
  }
}
