rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isTeacher() {
      return isSignedIn() && getUserData().role == 'TEACHER';
    }

    function getClassroom(classroomId) {
        return get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
    }

    function isClassroomTeacher(classroomId) {
        return isTeacher() && getClassroom(classroomId).creatorId == request.auth.uid;
    }

    function isEnrolled(classroomId) {
        return isSignedIn() && request.auth.uid in getClassroom(classroomId).enrolledStudentIds;
    }

    // --- Collection Rules ---

    // USERS Collection
    // Users can only be created during signup.
    // They can be read by their owner or any teacher.
    // They can be updated by their owner, or a teacher can update enrollment status.
    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow get: if isOwner(userId) || isTeacher();
      allow list: if isTeacher();
      allow update: if isOwner(userId) || 
        (isTeacher() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['enrolledClassroomIds']));
      allow delete: if false;
    }
    
    // CLASSROOMS Collection
    match /classrooms/{classroomId} {
        // Logged-in users can query for classrooms. The `get` rule below secures the actual data access.
        allow list: if isSignedIn();
        
        // Only students enrolled in the class or the teacher who created it can get the document.
        allow get: if isEnrolled(classroomId) || isClassroomTeacher(classroomId);

        // Only authenticated teachers can create classrooms, and they must be the author.
        allow create: if isTeacher() && request.resource.data.creatorId == request.auth.uid;

        // Only the teacher who created the classroom can update or delete it.
        allow update, delete: if isClassroomTeacher(classroomId);
        
        // ANNOUNCEMENTS Subcollection
        match /announcements/{announcementId} {
            allow read: if isEnrolled(classroomId) || isClassroomTeacher(classroomId);
            allow write: if isClassroomTeacher(classroomId);
        }

        // ASSIGNMENTS Subcollection
        match /assignments/{assignmentId} {
            allow read: if isEnrolled(classroomId) || isClassroomTeacher(classroomId);
            allow write: if isClassroomTeacher(classroomId);

            // SUBMISSIONS Sub-subcollection
            match /submissions/{submissionId} {
                // The student who submitted it can read/write it. The class teacher can only read it.
                allow read: if (isSignedIn() && request.auth.uid == submissionId) || isClassroomTeacher(classroomId);
                allow write: if isSignedIn() && request.auth.uid == submissionId;
            }
        }
    }

    // PRODUCTS Collection
    // Anyone can view products, but no one can write to them from the client.
    match /products/{productId} {
      allow read: if true;
      allow write: if false;
    }
    
    // CONTACTS Collection
    // Anyone can send a contact message, but no one can read them from the client.
    match /contacts/{contactId} {
        allow create: if true;
        allow read, update, delete: if false;
    }
  }
}
