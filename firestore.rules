
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // UTILITY FUNCTIONS
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isTeacher(userId) {
      return getUserRole(userId) == 'TEACHER';
    }

    function isClassroomOwner(classroomId) {
      return get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId == request.auth.uid;
    }

    function isEnrolled(classroomId) {
      // Check if the user's ID is in the classroom's list of enrolled students.
      return request.auth.uid in get(/databases/$(database)/documents/classrooms/$(classroomId)).data.enrolledStudentIds;
    }

    // PUBLIC COLLECTIONS
    match /contacts/{documentId} {
      allow create: if true;
      allow read, update, delete: if request.auth != null && isTeacher(request.auth.uid);
    }

    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && isTeacher(request.auth.uid);
    }
    
    // USER PROFILES
    match /users/{userId} {
      // Any authenticated user can search for other users (e.g., to enroll them)
      allow list: if request.auth != null;
      // Users can only read or create their own profile
      allow get, create, update: if isOwner(userId);
    }
    
    // CLASSROOMS & SUBCOLLECTIONS
    match /classrooms/{classroomId} {
      // Anyone can query the list of classrooms (e.g. student dashboard needs this)
      allow list: if request.auth != null;
      // Only an enrolled user or the owner can view a specific classroom's details
      allow get: if request.auth != null && (isClassroomOwner(classroomId) || isEnrolled(classroomId));
      
      // Only teachers can create classrooms
      allow create: if request.auth != null && isTeacher(request.auth.uid);
      // Only the classroom owner can update or delete it, or manage enrollments
      allow update, delete: if request.auth != null && isClassroomOwner(classroomId);

      // Announcements Subcollection
      match /announcements/{announcementId} {
        // Enrolled students and the owner can read announcements
        allow read: if request.auth != null && (isClassroomOwner(classroomId) || isEnrolled(classroomId));
        // Only the owner can create or delete announcements
        allow create, delete: if request.auth != null && isClassroomOwner(classroomId);
      }

      // Assignments Subcollection
      match /assignments/{assignmentId} {
        // Enrolled students and the owner can read assignments
        allow read: if request.auth != null && (isClassroomOwner(classroomId) || isEnrolled(classroomId));
        // Only the owner can create or delete assignments
        allow create, delete: if request.auth != null && isClassroomOwner(classroomId);
      }
    }
  }
}
