rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function hasRole(role) {
      return isAuth() && 'role' in getUserData() && getUserData().role == role;
    }

    function isAdmin() {
      return hasRole('ADMIN');
    }

    function isEnrolled(classroomId) {
      return isAuth() && 
             'enrolledClassroomIds' in getUserData() &&
             getUserData().enrolledClassroomIds.hasAny([classroomId]);
    }

    function isTeacherForClassroom(classroomId) {
      let classroomData = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return isAuth() &&
             'teacherIds' in classroomData &&
             classroomData.teacherIds.hasAny([request.auth.uid]);
    }

    // --- Rules ---
    match /users/{userId} {
      allow get: if isAuth();
      allow list: if isAdmin();
      allow create: if request.auth.uid == userId;
      allow update: if (request.auth.uid == userId && !('role' in request.resource.data))
                    || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /contacts/{contactId} {
      allow create: if true;
      allow read, write: if isAdmin();
    }

    match /classrooms/{classroomId} {
      function isMember() {
        return isAdmin() || isTeacherForClassroom(classroomId) || isEnrolled(classroomId);
      }
      
      function canManageContent() {
        return isAdmin() || isTeacherForClassroom(classroomId);
      }

      allow get: if isMember();
      allow list: if isAuth(); 
      allow create, delete: if isAdmin();
      allow update: if isAdmin();

      // Sub-collections
      match /announcements/{announcementId} {
        allow read: if isMember();
        allow write: if canManageContent();
      }

      match /materials/{materialId} {
        allow read: if isMember();
        allow write: if canManageContent();
      }

      match /assignments/{assignmentId} {
        allow read: if isMember();
        allow write: if canManageContent();

        match /submissions/{submissionId} {
            allow read: if canManageContent();
            allow write: if request.auth.uid == submissionId && isEnrolled(classroomId);
            allow delete: if false;
        }
      }
      
      match /quizzes/{quizId} {
        allow read: if isMember();
        allow write: if canManageContent();
        
        match /submissions/{submissionId} {
            allow read: if canManageContent();
            allow create: if request.auth.uid == submissionId && isEnrolled(classroomId) && !exists(/databases/$(database)/documents/classrooms/$(classroomId)/quizzes/$(quizId)/submissions/$(submissionId));
            allow update, delete: if false;
        }
      }
    }
  }
}
