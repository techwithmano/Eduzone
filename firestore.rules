rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    // Checks if a user is authenticated.
    function isAuth() {
      return request.auth != null;
    }

    // Gets the role of the currently authenticated user.
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Checks if the current user is an Admin.
    function isAdmin() {
      return isAuth() && getUserRole() == 'ADMIN';
    }

    // Checks if the current user created a specific classroom.
    function isClassroomCreator(classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return isAuth() && request.auth.uid == classroom.creatorId;
    }

    // Checks if the current user is an assigned teacher for a specific classroom.
    function isTeacher(classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return isAuth() && request.auth.uid in classroom.teacherIds;
    }

    // Checks if the current user is an enrolled student in a specific classroom.
    function isStudent(classroomId) {
      let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId)).data;
      return isAuth() && request.auth.uid in classroom.enrolledStudentIds;
    }
    
    // --- Collection: users ---
    match /users/{userId} {
      allow read: if isAuth();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // --- Collection: classrooms ---
    match /classrooms/{classroomId} {
      // To GET a single classroom document, you must be a member.
      allow get: if isAuth() && (isClassroomCreator(classroomId) || isTeacher(classroomId) || isStudent(classroomId));
      
      // To LIST classrooms, you must be authenticated. The client query must filter the results.
      // This is the key fix for the dashboard visibility issues.
      allow list: if isAuth();
      
      // Only Admins can create classrooms.
      allow create: if isAdmin();
      
      // Only the classroom creator (Admin) can update or delete the classroom document itself.
      allow update, delete: if isClassroomCreator(classroomId);

      // --- Subcollection: announcements ---
      match /announcements/{announcementId} {
        allow read: if isClassroomCreator(classroomId) || isTeacher(classroomId) || isStudent(classroomId);
        allow write: if isClassroomCreator(classroomId) || isTeacher(classroomId);
      }

      // --- Subcollection: materials ---
      match /materials/{materialId} {
        allow read: if isClassroomCreator(classroomId) || isTeacher(classroomId) || isStudent(classroomId);
        allow write: if isClassroomCreator(classroomId) || isTeacher(classroomId);
      }

      // --- Subcollection: assignments ---
      match /assignments/{assignmentId} {
        allow read: if isClassroomCreator(classroomId) || isTeacher(classroomId) || isStudent(classroomId);
        allow write: if isClassroomCreator(classroomId) || isTeacher(classroomId);
        
        // --- Nested Subcollection: assignment submissions ---
        match /submissions/{studentId} {
          allow get: if (isClassroomCreator(classroomId) || isTeacher(classroomId)) || request.auth.uid == studentId;
          allow list: if isClassroomCreator(classroomId) || isTeacher(classroomId);
          allow create: if request.auth.uid == studentId && !exists(path);
          allow update: if isClassroomCreator(classroomId) || isTeacher(classroomId); // For grading
          allow delete: if isClassroomCreator(classroomId) || isTeacher(classroomId);
        }
      }

      // --- Subcollection: quizzes ---
      match /quizzes/{quizId} {
        allow read: if isClassroomCreator(classroomId) || isTeacher(classroomId) || isStudent(classroomId);
        allow write: if isClassroomCreator(classroomId) || isTeacher(classroomId);
        
        // --- Nested Subcollection: quiz submissions ---
        match /submissions/{studentId} {
          allow get: if (isClassroomCreator(classroomId) || isTeacher(classroomId)) || request.auth.uid == studentId;
          allow list: if isClassroomCreator(classroomId) || isTeacher(classroomId);
          allow create: if request.auth.uid == studentId && !exists(path);
          allow update: if isClassroomCreator(classroomId) || isTeacher(classroomId); // For manual grading
          allow delete: if isClassroomCreator(classroomId) || isTeacher(classroomId);
        }
      }
    }

    // --- Collection: products ---
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // --- Collection: contacts ---
    match /contacts/{contactId} {
      allow create: if true;
      allow read, update, delete: if false;
    }
  }
}
