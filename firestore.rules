rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isTeacher() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'TEACHER';
    }

    match /users/{userId} {
      allow get: if request.auth.uid == userId || isTeacher();
      allow list: if isTeacher();
      allow create, update: if request.auth.uid == userId;
    }

    match /contacts/{documentId} {
      allow create: if true;
    }

    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isTeacher();
    }

    match /classrooms/{classroomId} {
      // A user can GET a classroom doc if they are the creator or are enrolled.
      // This rule is used for 'IN' queries and direct document gets.
      allow get: if request.auth.uid == resource.data.creatorId || request.auth.uid in resource.data.enrolledStudentIds;
      
      // We explicitly disallow broad collection scans for security.
      // All list operations must be done via specific 'IN' queries which are governed by the 'get' rule above.
      allow list: if false;
      
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid;
      allow update: if request.auth.uid == resource.data.creatorId;
      allow delete: if request.auth.uid == resource.data.creatorId;

      function isEnrolledOrCreator() {
        let classroom = get(/databases/$(database)/documents/classrooms/$(classroomId));
        return request.auth.uid == classroom.data.creatorId || request.auth.uid in classroom.data.enrolledStudentIds;
      }

      function isCreator() {
        return get(/databases/$(database)/documents/classrooms/$(classroomId)).data.creatorId == request.auth.uid;
      }

      match /announcements/{announcementId} {
        allow read, list: if isEnrolledOrCreator();
        allow create, delete: if isCreator();
      }
      
      match /assignments/{assignmentId} {
        allow read, list: if isEnrolledOrCreator();
        allow create, update, delete: if isCreator();

        match /submissions/{submissionId} {
          allow write: if submissionId == request.auth.uid && isEnrolledOrCreator();
          allow read: if isCreator() || (submissionId == request.auth.uid && isEnrolledOrCreator());
        }
      }
    }
  }
}
